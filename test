# Output file
$outputFile = "adls_ip_whitelist_report.csv"
"Subscription Name,Subscription ID,Resource Group,Storage Account,IP Whitelist Count" | Out-File -FilePath $outputFile -Encoding utf8

# Get all subscriptions
$subscriptions = az account list --query "[].{name:name, id:id}" -o tsv

foreach ($sub in $subscriptions) {
    $parts = $sub -split "`t"
    $subName = $parts[0]
    $subId = $parts[1]

    # Set the current subscription
    az account set --subscription $subId | Out-Null

    # Get all storage accounts with 'adls' in the name
    $storageAccounts = az storage account list `
        --query "[?contains(to_lower(name), 'adls')].{name:name, rg:resourceGroup}" -o tsv

    foreach ($sa in $storageAccounts) {
        $saParts = $sa -split "`t"
        $saName = $saParts[0]
        $rgName = $saParts[1]

        # Get number of whitelisted IPs
        $ipCount = az storage account show `
            --name $saName `
            --resource-group $rgName `
            --query "length(networkRuleSet.ipRules)" `
            -o tsv 2>$null

        if (-not $ipCount) {
            $ipCount = 0
        }

        # Append to CSV
        "$subName,$subId,$rgName,$saName,$ipCount" | Out-File -Append -FilePath $outputFile
        Write-Output "Checked: $subName / $saName -> $ipCount IP(s)"
    }
}

Write-Output "`nâœ… Report generated: $outputFile"



Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
.\adls-ip-report.ps1
