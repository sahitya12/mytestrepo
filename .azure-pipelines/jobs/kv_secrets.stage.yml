parameters:
  run_mode: 'ByCustodian'          # ByCustodian | AllADH
  adh_group: ''
  adh_subscription_type: ''        # prd | nonprd
  variableGroup: 'modernization_tfstate_backend_details'
  outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
  branchName: ''
  poolType: 'hosted'
  poolSuffix: '_agent1'
  poolName: ''
  useDemands: true
  # custom
  scriptPath: 'sanitychecks/scripts/Scan-KV-Secrets-ByCustodian.ps1'
  workingDir: '$(Build.SourcesDirectory)/sanitychecks/scripts'
  # extra args injected at call site via template parameters

- stage: KV_Secrets
  displayName: >-
    KV Secrets (${
      format('{0}{1}',
        parameters.run_mode,
        if(eq(parameters.run_mode, 'ByCustodian'), format(':0', parameters.adh_group), '')
      )
    })

  variables:
    outDir: ${{ parameters.outDir }}

  jobs:
  - ${{ if eq(parameters.run_mode, 'ByCustodian') }}:
    - template: ../templates/job.powershell-with-az.yml
      parameters:
        variableGroup: ${{ parameters.variableGroup }}
        displayName: 'KV Secrets Scan (ByCustodian)'
        scriptPath: ${{ parameters.scriptPath }}
        workingDir: ${{ parameters.workingDir }}
        arguments: >
          -TenantId "$(tenant_id)" -ClientId "$(backend_client_id)" -ClientSecret "$(backend_client_secret)"
          -adh_group "${{ parameters.adh_group }}" -OutputDir "$(outDir)" -BranchName "${{ parameters.branchName }}" -SecretCsvPath "${{ parameters.secretsCsvPath }}"
        artifactName: "kv-secrets"
        publishPath: "$(outDir)"
        poolType: ${{ parameters.poolType }}
        poolName: ${{ parameters.poolName }}
        poolSuffix: ${{ parameters.poolSuffix }}
        adh_group: ${{ parameters.adh_group }}
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        useDemands: ${{ parameters.useDemands }}

  - ${{ if ne(parameters.run_mode, 'ByCustodian') }}:
    - template: ../templates/job.powershell-with-az.yml
      parameters:
        variableGroup: ${{ parameters.variableGroup }}
        displayName: 'KV Secrets Scan (AllADH)'
        scriptPath: ${{ parameters.scriptPath }}
        workingDir: ${{ parameters.workingDir }}
        arguments: >
          -TenantId "$(tenant_id)" -ClientId "$(backend_client_id)" -ClientSecret "$(backend_client_secret)"
          -ScanAll -OutputDir "$(outDir)" -BranchName "${{ parameters.branchName }}" -SecretCsvPath "${{ parameters.secretsCsvPath }}"
        artifactName: "kv-secrets-ALLADH"
        publishPath: "$(outDir)"
        poolType: ${{ parameters.poolType }}
        poolName: ${{ parameters.poolName }}
        poolSuffix: ${{ parameters.poolSuffix }}
        adh_group: ''
        adh_subscription_type: ${{ parameters.adh_subscription_type }}
        useDemands: false
