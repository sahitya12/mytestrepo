parameters:
  run_mode: 'ByCustodian'
  adh_group: ''
  adh_subscription_type: ''
  secretsCsvPath: ''
  variableGroup: 'modernization_tfstate_backend_details'
  outDir: '$(Build.ArtifactStagingDirectory)/kv-secrets'
  branchName: ''

  poolType: 'self'
  poolName: ''
  poolSuffix: '_agent1'
  useDemands: true

- ${{ if eq(parameters.run_mode, 'ByCustodian') }}:
  - template: ../templates/job.powershell-with-az.yml
    parameters:
      variableGroup: ${{ parameters.variableGroup }}
      displayName: 'KV Secrets – ByCustodian'
      scriptPath: 'sanitychecks/scripts/Scan-KV-Secrets-ByCustodian.ps1'
      workingDir: '$(Build.SourcesDirectory)/sanitychecks/scripts'
      arguments: >
        -TenantId "$(tenant_id)" -ClientId "$(backend_client_id)" -ClientSecret "$(backend_client_secret)"
        -SecretCsvPath "${{ parameters.secretsCsvPath }}"
        -adh_group "${{ parameters.adh_group }}" -OutputDir "${{ parameters.outDir }}" -BranchName "${{ parameters.branchName }}"
      artifactName: 'kv-secrets'
      publishPath: "${{ parameters.outDir }}"
      poolType: ${{ parameters.poolType }}
      poolName: ${{ parameters.poolName }}
      poolSuffix: ${{ parameters.poolSuffix }}
      adh_group: ${{ parameters.adh_group }}
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      useDemands: ${{ parameters.useDemands }}

- ${{ if ne(parameters.run_mode, 'ByCustodian') }}:
  - template: ../templates/job.powershell-with-az.yml
    parameters:
      variableGroup: ${{ parameters.variableGroup }}
      displayName: 'KV Secrets – ALLADH'
      scriptPath: 'sanitychecks/scripts/Scan-KV-Secrets-AllADH.ps1'
      workingDir: '$(Build.SourcesDirectory)/sanitychecks/scripts'
      arguments: >
        -TenantId "$(tenant_id)" -ClientId "$(backend_client_id)" -ClientSecret "$(backend_client_secret)"
        -SecretCsvPath "${{ parameters.secretsCsvPath }}"
        -OutputDir "${{ parameters.outDir }}" -BranchName "${{ parameters.branchName }}"
      artifactName: 'kv-secrets-ALLADH'
      publishPath: "${{ parameters.outDir }}"
      poolType: ${{ parameters.poolType }}
      poolName: ${{ parameters.poolName }}
      poolSuffix: ${{ parameters.poolSuffix }}
      adh_group: ''
      adh_subscription_type: ${{ parameters.adh_subscription_type }}
      useDemands: false
